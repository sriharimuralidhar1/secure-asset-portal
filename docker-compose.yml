version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: secure-asset-portal-db
    environment:
      POSTGRES_DB: secure_asset_portal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - asset-portal-network
    restart: unless-stopped

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: secure-asset-portal-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - asset-portal-network
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redispassword

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: secure-asset-portal-backend
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:password123@database:5432/secure_asset_portal
      JWT_SECRET: your-super-secure-jwt-secret-key-here-minimum-32-characters
      FRONTEND_URL: http://localhost:3001
      REDIS_URL: redis://:redispassword@redis:6379
    ports:
      - "3000:3000"
    depends_on:
      - database
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - asset-portal-network
    restart: unless-stopped
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: secure-asset-portal-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3000/api
    ports:
      - "3001:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - asset-portal-network
    restart: unless-stopped
    command: npm start

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: secure-asset-portal-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - asset-portal-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  asset-portal-network:
    driver: bridge
